<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jboss.resteasy</groupId>
		<artifactId>resteasy-testsuite</artifactId>
		<version>6.3.0.Alpha1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<properties>
		<maven.compiler.parameters>true</maven.compiler.parameters>
		<container.qualifier.plaintext>jbossas-plaintext</container.qualifier.plaintext>
		<container.qualifier.ssl.oneway>jbossas-ssl-oneway</container.qualifier.ssl.oneway>
		<container.qualifier.ssl.twoway>jbossas-ssl-twoway</container.qualifier.ssl.twoway>
		<container.base.dir.plaintext>${project.build.directory}${file.separator}${container.qualifier.plaintext}</container.base.dir.plaintext>
		<container.base.dir.ssl.oneway>${project.build.directory}${file.separator}${container.qualifier.ssl.oneway}</container.base.dir.ssl.oneway>
		<container.base.dir.ssl.twoway>${project.build.directory}${file.separator}${container.qualifier.ssl.twoway}</container.base.dir.ssl.twoway>
		<container.offset.plaintext>0</container.offset.plaintext>
		<container.offset.ssl.oneway>1000</container.offset.ssl.oneway>
		<container.offset.ssl.twoway>2000</container.offset.ssl.twoway>
		<container.management.port.plaintext>9990</container.management.port.plaintext> <!-- keep in sync with port offset -->
		<container.management.port.ssl.oneway>10990</container.management.port.ssl.oneway> <!-- keep in sync with port offset -->
		<container.management.port.ssl.twoway>11990</container.management.port.ssl.twoway> <!-- keep in sync with port offset -->
		<module.jar.path>${jboss.home}${file.separator}modules${file.separator}system${file.separator}layers${file.separator}base</module.jar.path>
		<!-- Provisioning properties -->
		<resteasy.test.feature.pack.groupId>org.jboss.resteasy</resteasy.test.feature.pack.groupId>
		<resteasy.test.feature.pack.artifactId>galleon-feature-pack</resteasy.test.feature.pack.artifactId>
		<resteasy.test.feature.pack.version>${project.version}</resteasy.test.feature.pack.version>
		<!--server.test.feature.pack.groupId>org.wildfly</server.test.feature.pack.groupId>
        <server.test.feature.pack.artifactId>wildfly-ee-galleon-pack</server.test.feature.pack.artifactId>
        <server.test.feature.pack.version>${version.org.wildfly}</server.test.feature.pack.version-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jboss.home>${project.build.directory}${file.separator}wildfly</jboss.home>
		<jboss.server.config.dir>${jboss.home}${file.separator}standalone/configuration</jboss.server.config.dir>
		<container.qualifier.managed>jbossas-managed</container.qualifier.managed>
		<container.base.dir.managed>${project.build.directory}${file.separator}${container.qualifier.managed}</container.base.dir.managed>
		<container.management.port.managed>9990</container.management.port.managed>
		<!-- Provisioning properties -->
		<resteasy.test.feature.pack.groupId>org.jboss.resteasy</resteasy.test.feature.pack.groupId>
		<resteasy.test.feature.pack.artifactId>galleon-preview-feature-pack</resteasy.test.feature.pack.artifactId>
		<resteasy.test.feature.pack.version>${project.version}</resteasy.test.feature.pack.version>
		<server.test.feature.pack.groupId>org.wildfly</server.test.feature.pack.groupId>
		<server.test.feature.pack.artifactId>wildfly-preview-feature-pack</server.test.feature.pack.artifactId>
		<server.test.feature.pack.version>27.0.0.Final</server.test.feature.pack.version>
		<!-- For grpc-bridge test -->
		<wildfly.grpc.test.feature.pack.groupId>org.wildfly.extras.grpc</wildfly.grpc.test.feature.pack.groupId>
		<wildfly.grpc.test.feature.pack.artifactId>wildfly-grpc-feature-pack</wildfly.grpc.test.feature.pack.artifactId>
		<wildfly.grpc.test.feature.pack.version>0.0.7</wildfly.grpc.test.feature.pack.version>
		<version.jakarta.rest.example.grpc>0.0.39</version.jakarta.rest.example.grpc>
	</properties>
	<artifactId>resteasy-grpc-tests</artifactId>
	<name>RESTEasy Main testsuite: gRPC tests</name>
	<profiles>
		<!--
        Name:  download
        Descr: Download WildFly
        -->
		<profile>
			<id>download</id>
			<activation>
				<property>
					<name>!server.home</name>
				</property>
			</activation>
			<properties>
				<jboss.home>${project.build.directory}${file.separator}wildfly</jboss.home>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jboss.galleon</groupId>
						<artifactId>galleon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>server-provisioning</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>provision</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>provision-preview</id>
			<activation>
				<property>
					<name>provision.preview</name>
				</property>
			</activation>
			<properties>
				<resteasy.test.feature.pack.groupId>org.jboss.resteasy</resteasy.test.feature.pack.groupId>
				<resteasy.test.feature.pack.artifactId>galleon-preview-feature-pack</resteasy.test.feature.pack.artifactId>
				<resteasy.test.feature.pack.version>${version.resteasy.testsuite}</resteasy.test.feature.pack.version>
				<server.test.feature.pack.groupId>org.wildfly</server.test.feature.pack.groupId>
				<server.test.feature.pack.artifactId>wildfly-preview-feature-pack</server.test.feature.pack.artifactId>
				<server.test.feature.pack.version>${version.org.wildfly}</server.test.feature.pack.version>
			</properties>
		</profile>
		<profile>
			<id>skip.tracing.tests</id>
			<activation>
				<property>
					<name>skip.tracing.tests</name>
				</property>
			</activation>
			<properties>
				<additional.surefire.exclude.tracing.tests>,org.jboss.resteasy.category.TracingRequired</additional.surefire.exclude.tracing.tests>
			</properties>
		</profile>
	</profiles>
	<dependencies>
		<!--		<dependency>-->
		<!--			<groupId>org.wildfly</groupId>-->
		<!--			<artifactId>wildfly-preview-feature-pack</artifactId>-->
		<!--			<version>${server.test.feature.pack.version}</version>-->
		<!--			<type>zip</type>-->
		<!--		</dependency>-->
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-preview-feature-pack</artifactId>
			<version>27.0.1.Final</version>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>arquillian-utils</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-core-spi</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-stats</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client-utils</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-validator-provider</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-json-p-provider</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-json-binding-provider</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-atom-provider</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-cdi</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-crypto</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-wadl</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jdk-http</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-netty4</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-wadl-undertow-connector</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.resteasy</groupId>
					<artifactId>resteasy-undertow</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-html</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-tracing-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.ejb</groupId>
			<artifactId>jakarta.ejb-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.jms</groupId>
			<artifactId>jakarta.jms-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.el</groupId>
			<artifactId>jakarta.el-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
        <dependency>
    <groupId>org.jboss.threads</groupId>
    <artifactId>jboss-threads</artifactId>
    <version>2.4.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
		</dependency>
		<dependency>
			<groupId>io.reactivex.rxjava2</groupId>
			<artifactId>rxjava</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-rxjava2</artifactId>
			<version>${version.resteasy.testsuite}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging-annotations</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>grpc-bridge-runtime</artifactId>
			<version>${version.resteasy.testsuite}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.rest.example</groupId>
			<artifactId>jakarta.rest.example.grpc</artifactId>
			<version>${version.jakarta.rest.example.grpc}</version>
			<type>jar</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.inject</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jakarta.rest.example</groupId>
					<artifactId>jakarta.rest.example</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>jakarta.rest.example</groupId>
			<artifactId>jakarta.rest.example.grpc</artifactId>
			<version>${version.jakarta.rest.example.grpc}</version>
			<type>war</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.inject</groupId>
					<artifactId>javax.inject</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jakarta.rest.example</groupId>
					<artifactId>jakarta.rest.example</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty-shaded</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-stub</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>failureaccess</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>arquillian.xml</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>arquillian.xml</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<configuration>
					<skip>${skipTests}</skip>
				</configuration>
				<executions>
					<execution>
						<id>initialize-basedirs</id>
						<phase>process-test-classes</phase>
						<configuration>
							<target>
								<!-- Initialize basedir for tested container by copying
                                     the original into new place.
                                     This helps to isolate the multiple running instances.
                                     One copy per each container in arquillian.xml -->
								<delete quiet="true" dir="${container.base.dir.plaintext}" />
								<copy todir="${container.base.dir.plaintext}" overwrite="true" failonerror="true">
									<fileset dir="${jboss.home}/standalone" />
								</copy>
								<copy file="${project.basedir}/src/test/resources/standalone.xml.none" overwrite="true" tofile="${container.base.dir.plaintext}/configuration/standalone.xml" />
								<!-- SSL oneway -->
								<delete quiet="true" dir="${container.base.dir.ssl.oneway}" />
								<copy todir="${container.base.dir.ssl.oneway}/" overwrite="true" failonerror="true">
									<fileset dir="${jboss.home}/standalone/" />
								</copy>
								<copy file="${project.basedir}/src/test/resources/standalone.xml.oneway" overwrite="true" tofile="${container.base.dir.ssl.oneway}/configuration/standalone.xml" />
								<copy file="${project.basedir}/src/test/resources/server.keystore.jks" overwrite="true" todir="${container.base.dir.ssl.oneway}/configuration" />
								<!-- SSL twoway -->
								<delete quiet="true" dir="${container.base.dir.ssl.twoway}" />
								<copy todir="${container.base.dir.ssl.twoway}/" overwrite="true" failonerror="true">
									<fileset dir="${jboss.home}/standalone/" />
								</copy>
								<copy file="${project.basedir}/src/test/resources/standalone.xml.twoway" overwrite="true" tofile="${container.base.dir.ssl.twoway}/configuration/standalone.xml" />
								<copy file="${project.basedir}/src/test/resources/server.keystore.jks" overwrite="true" todir="${container.base.dir.ssl.twoway}/configuration" />
								<copy file="${project.basedir}/src/test/resources/server.truststore.jks" overwrite="true" todir="${container.base.dir.ssl.twoway}/configuration" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.jboss.galleon</groupId>-->
<!--				<artifactId>galleon-maven-plugins</artifactId>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>server-provisioning</id>-->
<!--						<phase>generate-test-resources</phase>-->
<!--						<goals>-->
<!--							<goal>provision</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<install-dir>${project.build.directory}/${project.build.finalName}</install-dir>-->
<!--							<feature-packs>-->
<!--								<feature-pack>-->
<!--									<groupId>org.wildfly.core</groupId>-->
<!--									<artifactId>wildfly-core-galleon-pack</artifactId>-->
<!--									<inherit-configs>false</inherit-configs>-->
<!--									<excluded-packages>-->
<!--										<name>product.conf</name>-->
<!--										<name>docs.schema</name>-->
<!--									</excluded-packages>-->
<!--								</feature-pack>-->
<!--								<feature-pack>-->
<!--									<groupId>${project.groupId}</groupId>-->
<!--									<artifactId>wildfly-servlet-galleon-pack</artifactId>-->
<!--									<version>${project.version}</version>-->
<!--									<excluded-packages>-->
<!--										<name>product.conf</name>-->
<!--										<name>docs.schema</name>-->
<!--									</excluded-packages>-->
<!--								</feature-pack>-->
<!--							</feature-packs>-->
<!--							<plugin-options>-->
<!--								<jboss-maven-dist />-->
<!--							</plugin-options>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.jboss.galleon</groupId>
				<artifactId>galleon-maven-plugin</artifactId>
				<configuration>
					<install-dir>${jboss.home}</install-dir>
					<skip>${galleon.skip}</skip>
					<record-state>false</record-state>
					<log-time>${galleon.log.time}</log-time>
					<offline>${galleon.offline}</offline>
					<plugin-options>
						<jboss-maven-dist />
						<jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
						<jboss-maven-dist />
					</plugin-options>
					<feature-packs>
						<feature-pack>
							<groupId>org.wildfly</groupId>
							<artifactId>wildfly-preview-feature-pack</artifactId>
							<version>${server.test.feature.pack.version}</version>
							<inherit-configs>false</inherit-configs>
							<included-configs>
								<config>
									<model>standalone</model>
									<name>standalone-full.xml</name>
								</config>
								<config>
									<model>standalone</model>
									<name>standalone.xml</name>
								</config>
							</included-configs>
							<excluded-packages>
								<name>docs.schema</name>
								<name>appclient</name>
								<name>domain</name>
							</excluded-packages>
						</feature-pack>
						<feature-pack>
							<groupId>org.wildfly.extras.grpc</groupId>
							<artifactId>wildfly-grpc-feature-pack</artifactId>
							<version>${wildfly.grpc.test.feature.pack.version}</version>
							<inherit-configs>true</inherit-configs>
						</feature-pack>
						<feature-pack>
							<groupId>org.jboss.resteasy</groupId>
							<artifactId>galleon-preview-feature-pack</artifactId>
							<version>${project.version}</version>
							<inherit-configs>false</inherit-configs>
						</feature-pack>
					</feature-packs>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
