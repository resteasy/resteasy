# This workflow will build a Java project with Maven
# For more information see: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: Build and Test RESTEasy - 6.2

on:
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/maven.yml'
      - '**/pom.xml'
      - '!docbook/pom.xml'
      - '!distribution/pom.xml'
      - 'providers/**'
      - 'resteasy-cdi/**'
      - 'resteasy-client/**'
      - 'resteasy-client-api/**'
      - 'resteasy-client-jetty/**'
      - 'resteasy-client-reactor-netty/**'
      - 'resteasy-client-utils/**'
      - 'resteasy-client-vertx/**'
      - 'resteasy-core/**'
      - 'resteasy-core-spi/**'
      - 'resteasy-jsapi/**'
      - 'resteasy-links/**'
      - 'resteasy-reactor/**'
      - 'resteasy-rxjava2/**'
      - 'resteasy-servlet-initializer/**'
      - 'resteasy-stats/**'
      - 'resteasy-wadl/**'
      - 'resteasy-wadl-undertow-connector/**'
      - 'security/**'
      - 'server-adapters/**'
      - 'testsuite/**'
      - '!testsuite/cloud-tests/**'
      - 'wildfly/**'
  schedule:
    - cron: '0 0 * * *' # Every day at 00:00 UTC

# Only run the latest job
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: |
            17
            21
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven Java 21 test with Java 17 - ${{ matrix.os }}
        run:  |
          mvn clean install -U -B -fae '-Dgithub.actions' '-Djvm=${{env.JAVA_HOME_17_X64}}/bin/java'

      - name: Build with Maven Java 21 - ${{ matrix.os }}
        run:  |
          mvn clean install -U -B -fae '-Dgithub.actions'
      - uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}
          path: '**/surefire-reports/'
      - uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: server-logs-${{ matrix.os }}
          path: '**/server.log'

  additional-profiles:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        profile:
          - '-Dsecurity.manager'

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Test with ${{ matrix.profile }} - JDK 21
        run:  |
          mvn clean install -U -B -fae ${{ matrix.profile }} '-Dgithub.actions'
      - uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}
          path: '**/surefire-reports/'
      - uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: server-logs-${{ matrix.os }}
          path: '**/server.log'

  java-11-build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: |
            11
            17
          distribution: 'temurin'
          cache: 'maven'
      - name: Test with Java 11 on WildFly 34 - ${{ matrix.os }}
        run:  |
          mvn clean install -U -B -fae '-Dserver.version=34.0.0.Final' '-Dgithub.actions' '-Djvm=${{env.JAVA_HOME_11_X64}}/bin/java'
      - uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}}-34
          path: '**/surefire-reports/'
      - uses: actions/upload-artifact@v5
        if: failure()
        with:
          name: server-logs-${{ matrix.os }}-34
          path: '**/server.log'

  build-java-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v5
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Build Java Docs with Java 17
        run: mvn clean site install -B -DskipTests -Dmpir.skip=true
