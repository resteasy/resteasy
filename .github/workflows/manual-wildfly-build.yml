# This workflow is for a nightly run against WildFly upstream

name: Manual WildFly Test Build

on:
  workflow_dispatch:
    inputs:
      os:
        description: "Runner OS"
        required: true
        default: "ubuntu-latest"
        type: string
      javaVersion:
        description: "Java Version"
        required: true
        default: "11"
        type: choice
        options:
          - "11"
          - "17"
      wildflyBranch:
        description: "WildFly Branch"
        required: true
        default: "main"
        type: string
      wildflyRepo:
        description: "WildFly Repository"
        required: true
        default: "wildfly/wildfly"
        type: string

jobs:
  wildfly-build:
    runs-on: ubuntu-latest
    outputs:
      wildfly-version: ${{steps.version.outputs.wildfly-version}}
    steps:
      - name: Checkout WildFly
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.wildflyRepo }}
          ref: ${{ inputs.wildflyBranch }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Build WildFly
        run: mvn clean install -DskipTests -Dcheckstyle.skip=true -Denforcer.skip=true
      - id: version
        run: echo "::set-output name=wildfly-version::$(mvn -B help:evaluate -Dexpression=project.version -pl . | grep -v '^\[')"
      - name: Archive the repository
        run: tar -czf maven-repository.tgz -C ~ .m2/repository
      - uses: actions/upload-artifact@v3
        with:
          name: maven-repository
          path: maven-repository.tgz
          retention-days: 5

  resteasy-build:
    runs-on: ${{ inputs.os }}
    needs: wildfly-build

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: maven-repository
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repository.tgz -C ~
      - name: Set up JDK ${{ inputs.javaVersion }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.javaVersion }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build on ${{ inputs.os }} with Java ${{ inputs.javaVersion }}
        run: mvn clean install '-Dserver.version=${{needs.wildfly-build.outputs.wildfly-version}}'
      - name: Upload surefire reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: surefire-reports
          path: '**/surefire-reports/*.txt'
      - name: Upload server logs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: server-logs
          path: '**/*.log'
